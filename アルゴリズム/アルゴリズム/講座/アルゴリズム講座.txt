アルゴリズムの理解

１アルゴリズムとは
　目標を達成するための処理手順。
　例、お腹がすいたーコンビニに行くーお金をおろすー弁当を買う。など

実習　隣町に行くために自動券売機で切符を買う。
　隣町に行きたいー支度をするー家を出るー駅まで向かうー駅の券売機で切符を買うー電車に乗るー隣町の駅に着く

　アルゴリズムにはまず、ゴールを決める「目的」と、それに従って決まる「処理手順」はアルゴリズムの必須要素
　アルゴリズムには必須要素のほかに前提条件が必要。「スタートとゴールが明確に決まっていること」と「選択できる処理内容が決まっていること」
　プログラミングは、どのように組み立て処理を実現するかという考え方が重要。

実習2　処理するごとに0～100の整数が提示される。その値に対して奇数か偶数かを表示して処理を終了する。
　0～100に整数が提示されるー提示された数字を2で割るー2で割れたら偶数を表示する＝2で割れなかったら奇数で表示するー処理を終了する。

実習3　0～2000お整数が提示される。1994年以降、4で割り切れる年は夏季オリンピック　4で割ると2余る年は冬季オリンピック
　0～2000の整数が提示される。ー1994以降の整数に絞る。ー4で割る。＝４で割り切れたら夏季オリンピック。
　＝4で割って2余ったら冬季オリンピック。＝4で割ってそれ以外または1994以前はオリンピックなし。ー処理を終了する。

実習4　アルゴリズムが複数ある場合、何を基準に考えればいいのか
　スタートとゴールを決める。できるだけ短く。わかりやすく書く。（正確性、処理速度、わかりやすい、再利用性がある）

　正しいことは絶対条件。速い、わかりやすいなどは次に重要な条件。
　アルゴリズムは（図式化した）文書として表現し、残しておかなければならない。この要件を満たした記述法をフローチャートという
　繰り返しの表現方法。繰り返しの条件を、処理の前に行うものを「前判定」。後を「あと判定」
　条件の判断が真の間は繰り返し処理を行うものを「while型」、偽の間は繰り返し処理を行うものを、「until型」
　whileとuntilは逆になるだけでそこまで変わらないが、判定が前か後かで大きく変わるので注意


データ構造
　基本データ構造とはデータの管理方法。コンピューターはデータをメモリという所に保管されるが、単純型は保管されている
　データを直接参照し、ポインタ型はデータの保管されているアドレスを参照する。単純型とポインタ型はどちらも「変数」と呼ばれる。
　一つのデータを一つの変数で管理。これに対し配列型とレコード型は、複数のデータをひとまとめにし、ひとつの変数で扱っていく方法。
　配列型は、同じ性質のデータを扱うのに対し、レコード型は異なる性質のデータをひとまとめにして扱う。

変数と値の交換
　変数にデータを保管することを代入という。

実習5　変数Aに5、変数Bに10が入っている。どうにかして入れ替える。
　変数Cを作成。C←A。A←B。B←C。

　どんなデータを入れられるのか前もって決めておく必要がある。
　整数　－3、3、20
　実数（少数）　3,13、3,10
　一文字　A、あ、亜
　文字列　"　"、abc、　あいう、
　論理値　trueまたはfalse
  レコード　略
　配列　略


実習6　結果を予測
　1、number=20
  2、number=15
　3、number=11

配列
　「同じデータ型」「同じ用途」のデータを複数扱う際に利用する。
　配列の特徴は、変数名は同じにして、その変数名の後ろを（）で括り、（）の中の数値を指定して管理する。
　（）の中に指定する数値を添字といい0から振っていく。添え字のことをインデックスと呼ぶこともある
　20人分のデータを扱う場合、添字は0～19になる。データ全体を要素数という。

二次元配列
　複数行複数列（表形式）の変数を扱うもの。変数名（行（縦）、列（横））

p36実習
 array(4)←100, number←array(1,0)

リスト
　リストはデータが格納されている位置情報を格納している。この位置情報を
　指し示すものをポインタと呼ぶ。

単方向リストと双方向リスト
　終端が特別な値で表されるものを単方向リスト。終端がルートへのポインタが持つものを循環単方向リスト。
　双方向リストは参照先の他に参照元のポインタももってあり、ルートと終端はそれぞれ自身への参照を持っている。

スタックとキュー
　格納した順番に取り出すことを「キュー」格納した逆順に取り出すのを「スタック」

スタック
　データや処理命令を格納することを「プッシュ」　取り出すことを「ポップ」
　ABCの順で格納すると、スタックはCBAとなる。このようなデータ操作をLIFOという。

キュー
　待ち行列とも呼ばれる。データや処理命令を格納することを「エンキュー」　取り出すことを「デキュー」
　ABCの順で格納すると、スタックはABCとなる。このようなデータ操作をFIFOという。

木構造
　単連結ー起点となるデータが存在する
　閉路を持たないー派生したデータが始点に戻らない。
　無向グラフーデータをめぐる方向が決まっていない。

二分探索木
　左の子は根よりも小さい要素、右の子は根よりも大きい要素である必要がある。


